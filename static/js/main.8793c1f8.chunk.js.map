{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","handleSelectedTodo","selectedTodo","map","todo","className","cn","id","completed","title","type","onClick","TodoFilter","onFilter","onTitleFilter","onClearFilter","useState","query","setQuery","filter","setFilter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleModalClose","isLoading","setIsLoading","user","setUser","useEffect","userId","finally","href","email","name","App","setTodos","setSelectedTodo","filterByTitle","setFilterByTitle","visibleTodos","toLowerCase","includes","status","findTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8793c1f8.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props>\n  = ({ todos, handleSelectedTodo, selectedTodo }) => {\n    return (\n      <table>\n        <tbody>\n          {todos.map(todo => (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': todo === selectedTodo,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': todo !== selectedTodo,\n                      'fa-eye-slash': todo === selectedTodo,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n","import { useState } from 'react';\n\ntype TodoFilterProps = {\n  onFilter: (status: string) => void,\n  onTitleFilter: (title: string) => void,\n  onClearFilter: () => void,\n};\n\nexport const TodoFilter\n  = ({ onFilter, onTitleFilter, onClearFilter } : TodoFilterProps) => {\n    const [query, setQuery] = useState<string>('');\n    const [filter, setFilter] = useState<string>('all');\n\n    const handleSelect: React.ChangeEventHandler<HTMLSelectElement>\n  = (event) => {\n    setFilter(event.target.value);\n    onFilter(event.target.value);\n  };\n\n    const handleInput: React.ChangeEventHandler<HTMLInputElement>\n  = (event) => {\n    setQuery(event.target.value);\n    onTitleFilter(event.target.value);\n  };\n\n    const handleClearing = () => {\n      setFilter('all');\n      setQuery('');\n      onClearFilter();\n    };\n\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={filter}\n              onChange={handleSelect}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={handleInput}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            {query && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleClearing}\n                aria-label=\"Clear search\"\n              />\n            )}\n          </span>\n        </p>\n      </form>\n    );\n  };\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype TodoModalProps = {\n  todo: Todo,\n  handleModalClose: () => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps>\n  = ({ todo, handleModalClose }) => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [user, setUser] = useState<User | null>(null);\n\n    useEffect(() => {\n      setIsLoading(true);\n\n      getUser(todo.userId).then(setUser).finally(() => setIsLoading(false));\n    }, []);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {isLoading ? (\n          <Loader />)\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${todo.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleModalClose}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {todo.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {todo.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n\n                  {' by '}\n\n                  <a href={`mailto:${user?.email}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  };\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterByTitle, setFilterByTitle] = useState<string>('');\n  const [filter, setFilter] = useState<string>('');\n\n  const selectTodos = (todo: Todo) => {\n    const findTodo = todos.find(value => value === todo) as Todo;\n\n    setSelectedTodo(findTodo);\n  };\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleFilter = (status: string) => {\n    if (status === 'all') {\n      setFilter('all');\n    } else if (status === 'completed') {\n      setFilter('completed');\n    } else if (status === 'active') {\n      setFilter('active');\n    }\n  };\n\n  const handleTitleFilter = (title: string) => {\n    setFilterByTitle(title.toLowerCase());\n  };\n\n  const visibleTodos = todos.filter(todo => {\n    if (filter === 'all') {\n      return todo.title.toLowerCase().includes(filterByTitle);\n    }\n\n    if (filter === 'completed') {\n      return todo.completed && todo.title.toLowerCase().includes(filterByTitle);\n    }\n\n    if (filter === 'active') {\n      return !todo.completed && todo.title.toLowerCase().includes(filterByTitle);\n    }\n\n    return todo.title.toLowerCase().includes(filterByTitle);\n  });\n\n  const handleClearFilter = () => {\n    setFilterByTitle('');\n    setFilter('all');\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos().then(setTodos).finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilter={handleFilter}\n                onTitleFilter={handleTitleFilter}\n                onClearFilter={handleClearFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                handleSelectedTodo={selectTodos}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && <TodoModal todo={selectedTodo} handleModalClose={handleModalClose} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}