{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","handleSelectedTodo","selectedTodo","style","width","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","onFilter","onTitleFilter","onClearFilter","useState","query","setQuery","filter","setFilter","value","onChange","event","selectedValue","target","filterValue","placeholder","inputValue","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleModalClose","isLoading","setIsLoading","user","setUser","useEffect","userId","finally","href","email","name","App","setTodos","undefined","setSelectedTodo","filterByTitle","setFilterByTitle","visibleTodos","toLowerCase","includes","handleFilterLogic","filterBy","foundTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5784a712.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo | undefined;\n};\n\nexport const TodoList: React.FC<Props>\n  = ({ todos, handleSelectedTodo, selectedTodo }) => (\n    <table style={{ width: '100%' }}>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': todo === selectedTodo,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': todo !== selectedTodo,\n                    'fa-eye-slash': todo === selectedTodo,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n","import { useState } from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype TodoFilterProps = {\n  onFilter: (status: Filter) => void,\n  onTitleFilter: (title: string) => void,\n  onClearFilter: () => void,\n};\n\nexport const TodoFilter\n  = ({ onFilter, onTitleFilter, onClearFilter } : TodoFilterProps) => {\n    const [query, setQuery] = useState<string>('');\n    const [filter, setFilter] = useState<string>('all');\n\n    const handleSelect: React.ChangeEventHandler<HTMLSelectElement>\n    = (event) => {\n      const selectedValue = event.target.value;\n      let filterValue: Filter = 'all';\n\n      if (selectedValue === 'active') {\n        filterValue = 'active';\n      } else if (selectedValue === 'completed') {\n        filterValue = 'completed';\n      }\n\n      setFilter(selectedValue);\n      onFilter(filterValue);\n    };\n\n    const handleInput: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n      const inputValue = (event.target as HTMLInputElement).value;\n\n      setQuery(inputValue);\n      onTitleFilter(inputValue);\n    };\n\n    const handleClearing = () => {\n      setFilter('all');\n      setQuery('');\n      onClearFilter();\n    };\n\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={filter}\n              onChange={handleSelect}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={handleInput}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            {query && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleClearing}\n                aria-label=\"Clear search\"\n              />\n            )}\n          </span>\n        </p>\n      </form>\n    );\n  };\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype TodoModalProps = {\n  todo: Todo,\n  handleModalClose: () => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps>\n  = ({ todo, handleModalClose }) => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [user, setUser] = useState<User | null>(null);\n\n    useEffect(() => {\n      setIsLoading(true);\n\n      getUser(todo.userId).then(setUser).finally(() => setIsLoading(false));\n    }, []);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {isLoading ? (\n          <Loader />)\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${todo.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleModalClose}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {todo.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {todo.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n\n                  {' by '}\n\n                  <a href={`mailto:${user?.email}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  };\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nconst handleFilterLogic = (filter: Filter, todo: Todo, filterByTitle: string) => {\n  if (filter === 'all') {\n    return todo.title.toLowerCase().includes(filterByTitle);\n  }\n\n  if (filter === 'completed') {\n    return todo.completed && todo.title.toLowerCase().includes(filterByTitle);\n  }\n\n  if (filter === 'active') {\n    return !todo.completed && todo.title.toLowerCase().includes(filterByTitle);\n  }\n\n  return todo.title.toLowerCase().includes(filterByTitle);\n};\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | undefined>(undefined);\n  const [filterByTitle, setFilterByTitle] = useState<string>('');\n  const [filter, setFilter] = useState<Filter>('all');\n\n  const selectTodos = (todo: Todo) => {\n    const foundTodo = todos.find(value => value === todo);\n\n    setSelectedTodo(foundTodo);\n  };\n\n  const handleModalClose = () => {\n    setSelectedTodo(undefined);\n  };\n\n  const handleSelectFilter = (filterBy: Filter) => {\n    setFilter(filterBy);\n  };\n\n  const handleTitleFilter = (title: string) => {\n    setFilterByTitle(title.toLowerCase());\n  };\n\n  const handleClearFilter = () => {\n    setFilterByTitle('');\n    setFilter('all');\n  };\n\n  const visibleTodos = todos.filter(todo => handleFilterLogic(filter, todo, filterByTitle));\n\n  useEffect(() => {\n    getTodos().then(setTodos).finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilter={handleSelectFilter}\n                onTitleFilter={handleTitleFilter}\n                onClearFilter={handleClearFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    handleSelectedTodo={selectTodos}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} handleModalClose={handleModalClose} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}